{"version":3,"sources":["../../src/idlSCModels/Media.ts","../../src/idlSCDbMgrs/idlSCBaseDbMgr.ts","../../src/idlSCHelpers/idlSCDbConfig.ts","../../src/idlSCDbMgrs/idlSCUserDbMgr.ts","../../src/pages/addmedia/addmedia.ts","../../src/pages/devicedetails/devicedetails.ts","../../src/pages/media/media.ts","../../node_modules/@angular/core/esm5 lazy","../../src/idlSCHelpers/idlSCConstants.ts","../../src lazy","../../src/idlSCHelpers/idlSCValidationMessage.ts","../../src/idlSCWebServiceMgrs/mediaWSMgr.ts","../../src/idlSCDbMgrs/idlSCUploadMediaDbMgr.ts","../../src/idlSCDataMgrs/deviceMediaDataMgr.ts","../../src/idlSCWebServiceMgrs/deviceMediaWSMgr.ts","../../src/idlSCDataMgrs/deviceDataMgr.ts","../../src/idlSCWebServiceMgrs/deviceWSMgr.ts","../../src/idlSCDataMgrs/userDataMgr.ts","../../src/idlSCModels/User.ts","../../src/idlSCWebServiceMgrs/userWSMgr.ts","../../src/pages/header/header.ts","../../src/pages/sidebar/sidebar.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/idlSCUtils/idlAlert.ts","../../src/idlSCDataMgrs/mediaDataMgr.ts","../../src/app/app.component.ts","../../src/idlSCHelpers/idlSCConnectivityService.ts","../../src/idlSCWebServiceMgrs/baseWSMgr.ts","../../src/idlSCHelpers/idlWSConfigs.ts","../../src/pages/dashboard/dashboard.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class Media{\r\n    \r\n    //Define private variables\r\n        private _id: string;\r\n        private _mediaName: string;\r\n        private _mediaUrl: string;\r\n        private _mediaDetails: string;\r\n        private _uploadTime: string;\r\n        private _userId: string;\r\n    \r\n    \r\n    //Getter and setter for data variables\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n    \r\n    set id(id: string) {\r\n        this._id = id;\r\n    }\r\n\r\n    get mediaName(): string {\r\n        return this._mediaName;\r\n    }\r\n    \r\n    set mediaName(mediaName: string) {\r\n        this._mediaName = mediaName;\r\n    }\r\n\r\n    get mediaUrl(): string {\r\n        return this._mediaUrl;\r\n    }\r\n    \r\n    set mediaUrl(mediaUrl: string) {\r\n        this._mediaUrl = mediaUrl;\r\n    }\r\n\r\n    get mediaDetails(): string {\r\n        return this._mediaDetails;\r\n    }\r\n    \r\n    set mediaDetails(mediaDetails: string) {\r\n        this._mediaDetails = mediaDetails;\r\n    }\r\n\r\n    get uploadTime(): string {\r\n        return this._uploadTime;\r\n    }\r\n    \r\n    set uploadTime(uploadTime: string) {\r\n        this._uploadTime = uploadTime;\r\n    }\r\n\r\n    get userId(): string {\r\n        return this._userId;\r\n    }\r\n    \r\n    set userId(userId: string) {\r\n        this._userId = userId;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCModels/Media.ts","/* @author : IDL Systems India Pvt Ltd, @ copyright 2018\r\n * @version :\r\n * @Created by : Shruthi K\r\n * @creationDate : 01-Apr-2019\r\n * @changeHistory :\r\n * @desc : Class to handle user sqlite database operations\r\n * date                Modified By                      Description\r\n *          \r\n*/\r\n\r\nimport * as database from '../idlSCHelpers/idlSCDbConfig';\r\n\r\ndeclare let window: any; // <--- Declare it like this\r\n\r\ndeclare function require(name: string);\r\nvar alasql = require('alasql');\r\n\r\nexport class IDLBaseDbMgr {\r\n\r\n    db;\r\n\r\n    constructor() {\r\n        this.init()\r\n    }\r\n\r\n    /**\r\n     * Intializae the database connection\r\n     */\r\n    init() {\r\n        if (window.openDatabase === undefined) {\r\n\r\n            alasql.promise([\r\n                'CREATE localStorage DATABASE IF NOT EXISTS User_Auth',\r\n                'ATTACH localStorage DATABASE User_Auth',\r\n                'USE User_Auth'\r\n            ]).then(function (res) {\r\n                console.log('Result from last query:', res)\r\n            }).catch(function (reason) {\r\n                console.trace(reason)\r\n            })\r\n\r\n            if (database.idlSCTables) {\r\n                for (let key in database.idlSCTables) {\r\n                    alasql(database.idlSCTables[key]);\r\n                }\r\n            }\r\n        } else {\r\n            this.db = (window.cordova.platformId === 'browser') ?\r\n                window.openDatabase(database.dbConfigs.databaseName, database.dbConfigs.databaseVersion, database.dbConfigs.data, 2 * 1024 * 1024) :\r\n                window.sqlitePlugin.openDatabase({ name: database.dbConfigs.databaseName + '.db', location: database.dbConfigs.location });\r\n\r\n            if (database.idlSCTables) {\r\n                for (let key in database.idlSCTables) {\r\n                    this.db.transaction(function (tx) {\r\n                        tx.executeSql(database.idlSCTables[key]);\r\n                    }, function (error) {\r\n                        console.log(\"Failed to create table \" + JSON.stringify(error))\r\n                    }, function () {\r\n                        console.log(\"Successfully table created \" + database.idlSCTables[key])\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * execute the query for database\r\n     * @param query database query to execute\r\n     * @param data parameters to store data\r\n     */\r\n    executeSqlCallback(query: string, data: any[]) {\r\n        return new Promise((resolve, reject) => {\r\n            if (window.openDatabase !== undefined) {\r\n                this.db.transaction(function (tx) {\r\n                    tx.executeSql(query, data, function (tx, res) {\r\n                        resolve(res);\r\n                    }, function (tx, error) {\r\n                        reject(error.message);\r\n                    });\r\n                }, function (error) {\r\n                    reject(error);\r\n                }, function () {\r\n\r\n                });\r\n            } else {\r\n                var result = alasql(query, data)\r\n                resolve(result);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * close the database\r\n     */\r\n    closeDB() {\r\n        return new Promise((resolve, reject) => {\r\n            this.db.close(function () {\r\n                var response = { 'message': 'Successfully Database Closed' }\r\n                resolve(response)\r\n            }, function (error) {\r\n                reject(error)\r\n            });\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCDbMgrs/idlSCBaseDbMgr.ts","/**\r\n * Configurations for databases\r\n */\r\nexport const dbConfigs = {\r\n\r\n    databaseName: 'IDLSMARTCONNECT',\r\n    location: 'default',\r\n    data: 'Data',\r\n    databaseVersion: '1.0'\r\n}\r\n\r\n/**\r\n * configuration of database tables\r\n */\r\nexport const idlSCTables = {\r\n\r\n    idlSCUser: 'CREATE TABLE IF NOT EXISTS IDLSC_User (ISCU_id varchar(255) NOT NULL PRIMARY KEY, ISCU_userName varchar(255), ISCU_email varchar(255), ISCU_password varchar(255))',\r\n    idlSCMedia: 'CREATE TABLE IF NOT EXISTS IDLSC_Media (ISCM_id varchar(255) NOT NULL PRIMARY KEY, ISCM_mediaName varchar(255), ISCM_mediaUrl varchar(255), ISCM_uploadTime varchar(255), ISCM_userId varchar(255))',\r\n    idlSCDevice: 'CREATE TABLE IF NOT EXISTS IDLSC_Device (ISCD_id varchar(255) NOT NULL PRIMARY KEY, ISCD_deviceId varchar(255), ISCD_userId varchar(255), ISCD_status(255))',\r\n    idlSCDeviceMedia: 'CREATE TABLE IF NOT EXISTS IDLSC_DeviceMedia (ISCDM_id varchar(255) NOT NULL PRIMARY KEY, ISCDM_mediaId varchar(255), ISCDM_userId varchar(255), ISCDM_type varchar(255), ISCDM_date varchar(255))'\r\n\r\n}\r\n\r\n/**\r\n * Queries for IDL Smart Connect User \r\n */ \r\nexport const idlSCUserQuery = {\r\n    insertUser: 'INSERT INTO IDLSC_User (ISCU_id, ISCU_userName, ISCU_email, ISCU_password) VALUES (?,?,?,?)',\r\n   deleteUsers: 'DELETE FROM IDLSC_User',\r\n   deleteUserByEmail: 'DELETE FROM IDLSC_User WHERE ISCU_email = ?',\r\n   getUserById: 'SELECT * FROM IDLSC_User WHERE IDLSC_User = ?'\r\n}\r\n\r\n/**\r\n * Queries for IDL Smart Connect Media \r\n */ \r\nexport const idlSCMediaQuery = {\r\n    insertMedia: 'INSERT INTO IDLSC_Media (ISCM_id, ISCM_mediaName, ISCM_mediaUrl, ISCM_uploadTime, ISCM_userId) VALUES (?,?,?,?,?)',\r\n    deleteMedia: 'DELETE FROM IDLSC_Media WHERE ISCM_id = ?',\r\n    getMediaById: 'SELECT * FROM IDLSC_Media WHERE ISCM_id = ?'\r\n}\r\n\r\n/**\r\n * Queries for IDL Smart Connect Device \r\n */ \r\nexport const idlSCDeviceQuery = {\r\n\r\n}\r\n\r\n/**\r\n * Queries for IDL Smart Connect Device_Media \r\n */ \r\nexport const idlSCDeviceMediaQuery = {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCHelpers/idlSCDbConfig.ts","/* @author : IDL Systems India Pvt Ltd, @ copyright 2018\r\n * @version :\r\n * @Created by : Shruthi K\r\n * @creationDate : 01-Apr-2019\r\n * @changeHistory :\r\n * @desc : Class to handle user sqlite database operations\r\n * date                Modified By                      Description\r\n *          \r\n*/\r\n\r\nimport { IDLBaseDbMgr } from \"../idlSCDbMgrs/idlSCBaseDbMgr\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport * as database from '../idlSCHelpers/idlSCDbConfig';\r\nimport { User } from \"../idlSCModels/User\";\r\nimport * as consts from '../idlSCHelpers/idlSCConstants';\r\n\r\n@Injectable()\r\nexport class IDLUserDBMgr {\r\n\r\n    baseDbMgr: IDLBaseDbMgr;\r\n\r\n    constructor(private idlBaseDbMgr: IDLBaseDbMgr) {\r\n        this.baseDbMgr = new IDLBaseDbMgr();\r\n    }\r\n\r\n    /**\r\n     * add user to database\r\n     * @param user user model object to store database\r\n     */\r\n    addUser(user: User) {\r\n        return new Promise((resolve, reject) => {\r\n            this.deleteUserByEmail(user.email).then((status) => {\r\n                this.baseDbMgr.executeSqlCallback(database.idlSCUserQuery.insertUser, [user.id, user.userName, user.email, user.password]).then((res) => {\r\n                    resolve(true);\r\n                }).catch((err) => {\r\n                    reject(err);\r\n                });\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Delete all users from database\r\n     */\r\n    deleteUser() {\r\n        return new Promise((resolve, reject) => {\r\n            this.baseDbMgr.executeSqlCallback(database.idlSCUserQuery.deleteUsers, []).then((res) => {\r\n                resolve(true);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Delete user by email from database\r\n     */\r\n    deleteUserByEmail(email) {\r\n        return new Promise((resolve, reject) => {\r\n            this.baseDbMgr.executeSqlCallback(database.idlSCUserQuery.deleteUserByEmail, [email]).then((res) => {\r\n                resolve(true);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * get user by id\r\n     * @param id unique id to get user from database\r\n     */\r\n    getUserById(id) {\r\n        return new Promise((resolve, reject) => {\r\n            this.baseDbMgr.executeSqlCallback(database.idlSCUserQuery.getUserById, [id]).then((res: any) => {\r\n                if ((res.rows !== undefined) && (res.rows !== null)) {\r\n                    this.getUserObject(res.rows.item(0)).then((user) => {\r\n                        alert(JSON.stringify(user))\r\n                        resolve(user);\r\n                    })\r\n                }else if((res !== undefined) && (res[0] !== undefined)){\r\n                    this.getUserObject(res[0]).then((user) => {\r\n                        alert(JSON.stringify(user))\r\n                        resolve(user);\r\n                    })\r\n                }else {\r\n                    var error = {}\r\n                    error[consts.response.message] = consts.errorMessages.unableToGetUserData\r\n                    alert(error);\r\n                    reject(error)\r\n                }\r\n            }).catch((err) => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get idl user object from the database response\r\n     * @param obj database result object\r\n     */\r\n    private getUserObject(obj) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            var user = new User();\r\n            user.id = obj.ISCU_id\r\n            user.userName = obj.ISCU_name\r\n            user.email = obj.ISCU_email\r\n            user.password = obj.ISCU_password\r\n            alert(JSON.stringify(user));\r\n            resolve(user);\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCDbMgrs/idlSCUserDbMgr.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController, ViewController } from 'ionic-angular';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as idlSCValidationMessage from '../../idlSCHelpers/idlSCValidationMessage';\nimport * as consts from '../../idlSCHelpers/idlSCConstants';\nimport { IDLAlert } from '../../idlSCUtils/idlAlert';\nimport { MediaDataMgr } from '../../idlSCDataMgrs/mediaDataMgr';\nimport { Media } from '../../idlSCModels/Media';\nimport { DashboardPage } from '../dashboard/dashboard';\n\n/**\n * Generated class for the AddmediaPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-addmedia',\n  templateUrl: 'addmedia.html',\n})\nexport class AddmediaPage {\n\n\n  mediaForm: FormGroup;\n  validation_messages;\n  file;\n  base64Image;\n  title;\n  fileName;\n  fileType;\n  fileSize;\n  lastModifiedDate;\n  mediaId;\n\n  constructor(public navCtrl: NavController,private idlAlert: IDLAlert,  public viewCtrl: ViewController, public formBuilder: FormBuilder, public navParams: NavParams, public loadingctrl: LoadingController, private mediaDataMgr: MediaDataMgr) {\n\n    this.validation_messages = idlSCValidationMessage.validationMessages\n    this.mediaForm = formBuilder.group({\n      title: ['', Validators.compose([Validators.required])]\n    });\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AddmediaPage');\n  }\n\n  add() {\n    if (!this.mediaForm.valid) {\n      this.idlAlert.defaultAlert(consts.alertTitles.Register, consts.alertMessages.detailEntry, consts.alertButtons.ok);\n    } else {\n      let imageFileUri = this.base64Image;\n      this.readFile(imageFileUri);\n    }\n  }\n\n  /**\n   * this is method is used to select file in the browser\n   * @param $event\n   */\n  changeListener($event): void {\n    this.file = $event.target.files[0];\n    this.fileName = this.file.name;\n    this.fileSize = this.file.size;\n    this.fileType = this.file.type;\n    this.lastModifiedDate = this.file.lastModifiedDate;\n    var myReader: FileReader = new FileReader();\n    myReader.onloadend = (e) => {\n      this.base64Image = myReader.result;\n    }\n    myReader.readAsDataURL(this.file);\n  }\n\n  /**\n   * \n   * @param file \n   */\n  readFile(file: any) {\n    var mediaObj = {};\n\n    mediaObj['mediaSize'] = this.fileSize;\n    mediaObj['mediaType'] = this.fileType;\n    mediaObj['lastModifiedDate'] = this.lastModifiedDate;\n    var currentDate = new Date().toLocaleTimeString();\n    let mediaData = new FormData();\n    mediaData.append('mediaName', this.fileName);\n    mediaData.append('uploadTime', currentDate);\n    mediaData.append('mediaDetails', JSON.stringify(mediaObj));\n\n    if (file) {\n      this.dataURItoBlob(this.base64Image).then((data: Blob) => {\n        mediaData.append('files', data, file.type);\n        this.addMedia(mediaData);\n      })\n    } else {\n      this.addMedia(mediaData);\n    }\n  }\n\n  /**\n   * this method is used for convert data uri to blob\n   * @param dataURI is the image uri\n   */\n  dataURItoBlob(dataURI) {\n    console.log('Inside the data uri to blob' + dataURI)\n    return new Promise((resolve, reject) => {\n      // convert base64 to raw binary data held in a string\n      var byteString = atob(dataURI.split(',')[1]);\n      // separate out the mime component\n      var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n      // write the bytes of the string to an ArrayBuffer\n      var ab = new ArrayBuffer(byteString.length);\n      var ia = new Uint8Array(ab);\n      for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n      }\n      // write the ArrayBuffer to a blob, and you're done\n      var bb = new Blob([ab], { type: mimeString });\n      resolve(bb)\n    })\n  }\n\n  /**\n   * \n   * @param orgData \n   */\n  addMedia(videoData) {\n\n    let loading = this.loadingctrl.create({\n      content: consts.loadingMessages.pleaseWait\n    });\n    loading.present();\n    \n    this.mediaDataMgr.addMedia(videoData).then((res: Media) => {\n      this.mediaId = res.id;\n      window.localStorage.setItem(consts.globalVariables.mediaId, res.id);\n      loading.dismiss();\n      this.navCtrl.push(DashboardPage).then(() => { this.viewCtrl.dismiss(AddmediaPage); });\n    }).catch((err) => {\n      loading.dismiss();\n    })\n  }\n\n  Cancel(){\n    this.navCtrl.pop();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addmedia/addmedia.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController, ViewController } from 'ionic-angular';\nimport { IDLAlert } from '../../idlSCUtils/idlAlert';\nimport { MediaDataMgr } from '../../idlSCDataMgrs/mediaDataMgr';\nimport * as consts from '../../idlSCHelpers/idlSCConstants';\nimport { DeviceMediaDataMgr } from '../../idlSCDataMgrs/deviceMediaDataMgr';\n\n/**\n * Generated class for the DevicedetailsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-devicedetails',\n  templateUrl: 'devicedetails.html',\n})\nexport class DevicedetailsPage {\n\n  //selectedVideoArray = ['video1', 'video2', 'video3'];\n  //videoArray = ['video4', 'video5', 'video6'];\n  mediaList;\n  id;\n  mediaData;\n  mediaId = [];\n  selectedMediaData;\n  dataMode1 = [];\n  dataMode2 = [];\n  mode1: boolean;\n  mode2: boolean;\n  myStartDateMode1;\n  myStartTimeMode1;\n  myStartDateMode2;\n  myStartTimeMode2;\n  myEndDateMode2;\n  myEndTimeMode2;\n\n  constructor(public navCtrl: NavController,  public viewCtrl: ViewController,public navParams: NavParams, private idlAlert: IDLAlert, public loadingctrl: LoadingController, private mediaDataMgr: MediaDataMgr, private deviceMediaDataMgr: DeviceMediaDataMgr) {\n  }\n\n  ngOnInit() {\n    console.log('ionViewDidLoad DevicedetailsPage');\n    this.getMedia();\n    this.id = this.navParams.get(\"deviceId\");\n\n  }\n\n  getMedia() {\n    let loading = this.loadingctrl.create({\n      content: consts.loadingMessages.media\n    });\n    loading.present();\n    this.mediaDataMgr.getMedia().then((media) => {\n      loading.dismiss();\n      this.mediaList = media;\n      this.mediaData = this.mediaList.content;\n      console.log(\"Devce details media\" + JSON.stringify(this.mediaData));\n    }).catch((err) => {\n      loading.dismiss();\n      this.idlAlert.defaultAlert(consts.alertTitles.deviceDetails, err.message, consts.alertButtons.ok);\n    });\n  }\n\n  addVideoMode1(videos) {\n    this.dataMode1.push(videos)\n    console.log(\"Mode1\" + JSON.stringify(this.dataMode1));\n  }\n\n  addVideoMode2(videos) {\n    this.dataMode2.push(videos)\n    console.log(\"Mode2\" + JSON.stringify(this.dataMode2));\n  }\n\n  removeVideo(videos) {\n\n  }\n\n  radioCheckedMode1() {\n    this.mode1 = true;\n    this.mode2 = false;\n  }\n\n  radioCheckedMode2() {\n    this.mode2 = true;\n    this.mode1 = false;\n  }\n\n  saveDeviceMedia() {\n\n    var userId = window.localStorage.getItem(consts.globalVariables.userId);\n    var uploadedDate = new Date(new Date() + 'UTC');\n\n    var deviceMediaObj = {};\n\n    if (this.mode1 == true && this.mode2 == false) {\n      var dateObj = new Date(new Date(this.myStartDateMode1 + ' ' + this.myStartTimeMode1) + 'UTC');\n      deviceMediaObj['deviceId'] = this.id;\n      deviceMediaObj['userId'] = userId;\n      deviceMediaObj['uploadedDate'] = uploadedDate;\n      deviceMediaObj['type'] = 'time';\n      deviceMediaObj['startDate'] = dateObj;\n      this.getMediaIdList(this.dataMode1).then(res => {\n        deviceMediaObj['media'] = res;\n      }).catch(err => {\n        console.log(err)\n      })\n    } else if (this.mode2 == true && this.mode1 == false) {\n      var startDateObj = new Date(new Date(this.myStartDateMode2 + ' ' + this.myStartTimeMode2) + 'UTC');\n      var endDateObj = new Date(new Date(this.myEndDateMode2 + ' ' + this.myEndTimeMode2) + 'UTC');\n      deviceMediaObj['deviceId'] = this.id;\n      deviceMediaObj['userId'] = userId;\n      deviceMediaObj['uploadedDate'] = uploadedDate;\n      deviceMediaObj['type'] = 'loop';\n      deviceMediaObj['startDate'] = startDateObj;\n      deviceMediaObj['endDate'] = endDateObj;\n\n      this.getMediaIdList(this.dataMode2).then(res => {\n        deviceMediaObj['media'] = res;\n      }).catch(err => {\n        console.log(err)\n      })\n    }\n\n    let loading = this.loadingctrl.create({\n      content: consts.loadingMessages.pleaseWait\n    });\n    loading.present();\n    this.deviceMediaDataMgr.uploadDeviceMedia(deviceMediaObj).then((deviceMediaData) => {\n      loading.dismiss();\n      console.log(JSON.stringify(deviceMediaData));\n    }).catch((err) => {\n      loading.dismiss();\n      this.idlAlert.defaultAlert(consts.alertTitles.deviceDetails, err.message, consts.alertButtons.ok);\n    })\n  }\n\n  /**\n   * \n   * @param data \n   */\n  getMediaIdList(data) {\n    return new Promise((resolve, reject) => {\n      let mediaIdList = [];\n      data.forEach((value, key, index) => {\n        var id = value.ISCM_id;\n        alert(\"mediaId \" + id);\n        mediaIdList.push(\n          id\n        )\n      });\n      Promise.all(mediaIdList).then(_ => { resolve(mediaIdList) }).catch(err => { reject(err) })\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/devicedetails/devicedetails.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ModalController, LoadingController } from 'ionic-angular';\nimport { AddmediaPage } from '../addmedia/addmedia';\nimport { Media } from '../../idlSCModels/Media';\nimport { IDLAlert } from '../../idlSCUtils/idlAlert';\nimport { MediaDataMgr } from '../../idlSCDataMgrs/mediaDataMgr';\nimport * as consts from '../../idlSCHelpers/idlSCConstants';\n\n/**\n * Generated class for the MediaPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-media',\n  templateUrl: 'media.html',\n})\nexport class MediaPage {\n\n  mediaList;\n\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    public modalCtrl: ModalController, private idlAlert: IDLAlert, public loadingctrl: LoadingController, private mediaDataMgr: MediaDataMgr) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad MediaPage');\n    this.mediaList = this.navParams.get(\"media\");\n  }\n\n  addnewmedia() {\n    const modal = this.modalCtrl.create(AddmediaPage);\n    modal.present();\n  }\n\n  videoView() {\n\n  }\n\n  videoDelete() {\n    let loading = this.loadingctrl.create({\n      content: consts.loadingMessages.pleaseWait\n\n    });\n    loading.present();\n    this.mediaDataMgr.deleteMedia().then((response) => {\n      loading.dismiss();\n      alert(JSON.stringify(response));\n    }).catch((err) => {\n      loading.dismiss();\n      this.idlAlert.defaultAlert(consts.alertTitles.deleteMedia, err.message, consts.alertButtons.ok);\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/media/media.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 217;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 217\n// module chunks = 7","export const passwordType = {\r\n    text: 'text',\r\n    password: 'password'\r\n}\r\n\r\n/**\r\n * Constants for server in response\r\n */\r\nexport const response = {\r\n    token: 'token',\r\n    message: 'message',\r\n    code: 'code',\r\n    userId: 'userid',\r\n    mediaId: 'mediaId'\r\n}\r\n\r\n/**\r\n * Constants for store the auth tokens\r\n */\r\nexport const token = {\r\n    bearer: 'Bearer ',\r\n    device: 'deviceToken',\r\n    user: 'userToken'\r\n}\r\n\r\n/**\r\n * message to show once the call failure\r\n */\r\nexport const errorMessages = {\r\n    idlInvalidResponse: 'Invalid Response',\r\n    idlResponseNotFound: 'Response not found',\r\n    idlDeviceRegistration: 'Failed to register device, Unable to get the token.',\r\n    idlUserLogin: 'Failed to login.',\r\n    idlUserUpdate: 'Unable to update user.',\r\n    unableToGetDeviceData: 'Unable to get device data from database',\r\n    unableToGetUserData: 'Unable to get user data from database',\r\n    unableToParseResponse: 'Unable to parse response',\r\n    unableToLogout: 'Unable to logout user',\r\n    unableToChangePassword: 'Unable to change password.',\r\n    unableToGetNotificationId: 'Unable to get notification id',\r\n    unableToGetNotificationForId: 'Unable to get notification for id'\r\n}\r\n\r\n/**\r\n * Application alert messages\r\n */\r\nexport const alertTitles = {\r\n    \r\n    Register: 'Register',\r\n    Login: 'Login',\r\n    logout: 'Logout',\r\n    deleteMedia: 'Delete Media',\r\n    dashBoard: 'Dash Board',\r\n    deviceDetails: 'Device Details'\r\n}\r\n\r\n/**\r\n * Application alert messages\r\n */\r\nexport const alertMessages = {\r\n    termsAndConditionsDecline: 'Please accept terms and conditions to submit.',\r\n    failAuth: \"Failed to Authenticate\",\r\n    detailEntry: \"Enter Proper Details\",\r\n    passwordMismatch: \"Password Missmatch\",\r\n    tokenfails: \"Please try again\",\r\n    changePasswordMatch: \"Old and New Password Should not be Same.\"\r\n}\r\n\r\n/**\r\n * Application alert messages\r\n */\r\nexport const alertButtons = {\r\n    dismiss: 'Dismiss',\r\n    ok: 'Ok'\r\n}\r\n\r\n/**\r\n * loading messages\r\n */\r\nexport const loadingMessages = {\r\n    authenticating: 'Authenticating...',\r\n    pleaseWait: 'Please wait...',\r\n    logout: 'Logging out...',\r\n    updating: 'Updating...',\r\n    signUp: 'Signing up...',\r\n    login: 'Logging in...',\r\n    initializing: 'Initialization...',\r\n    media: 'Getting Media List'\r\n}\r\n\r\n/**\r\n * store the application variables\r\n */\r\nexport const globalVariables = {\r\n    userId: 'userId',\r\n    mediaId: 'mediaId',\r\n    mediaName: 'mediaName',\r\n    deviceId: 'deviceId'\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCHelpers/idlSCConstants.ts","var map = {\n\t\"../pages/addmedia/addmedia.module\": [\n\t\t735,\n\t\t6\n\t],\n\t\"../pages/dashboard/dashboard.module\": [\n\t\t736,\n\t\t5\n\t],\n\t\"../pages/devicedetails/devicedetails.module\": [\n\t\t737,\n\t\t4\n\t],\n\t\"../pages/header/header.module\": [\n\t\t738,\n\t\t3\n\t],\n\t\"../pages/login/login.module\": [\n\t\t739,\n\t\t2\n\t],\n\t\"../pages/media/media.module\": [\n\t\t740,\n\t\t1\n\t],\n\t\"../pages/sidebar/sidebar.module\": [\n\t\t741,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 261;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 261\n// module chunks = 7","export const validationMessages = {\r\n\r\n    'email': [\r\n        { type: 'required', message: 'Enter a Valid Email.' },\r\n      //  { type: 'isInvalidEmailFormat', message: 'email must be Valid like sample@sample.com' }\r\n      ],\r\n\r\n      'password': [\r\n        { type: 'required', message: 'Password is required.' },\r\n        { type: 'minlength', message: 'Password must be at least 8 characters long.' },\r\n        { type: 'pattern', message: 'password must have atleast 1 uppercase,1 lowercase,1 Special Character and 1 number.' }\r\n      ],\r\n      'title': [\r\n        { type: 'required', message: 'Title is required.'}\r\n      ]\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCHelpers/idlSCValidationMessage.ts","/**\r\n * @author : IDL Systems India Pvt Ltd, @ copyright 2018\r\n * @version : 1.0\r\n * @Created by : Shruthi K\r\n * @creationDate : 01-Apr=2019\r\n * @superClass :\r\n * @interfaces : no interface\r\n * @changeHistory :\r\n * Date                    Modified by                     Description\r\n * @desc : This is user web service manager\r\n */\r\n\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BaseWSMgr } from \"./baseWSMgr\";\r\nimport * as wsConfig from '../idlSCHelpers/idlWSConfigs';\r\nimport * as consts from '../idlSCHelpers/idlSCConstants';\r\n\r\n@Injectable()\r\nexport class MediaWSMgr {\r\n    /**\r\n     * Default constructor \r\n     */\r\n    constructor(private baseWSMgr: BaseWSMgr) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Method to login the user to application\r\n     * @param userData \r\n     */\r\n    addMedia(mediaData) {\r\n\r\n        //build header object\r\n        var headers = {}\r\n        if (window.localStorage.getItem(consts.globalVariables.userId) !== \"undefined\" || window.localStorage.getItem(consts.globalVariables.userId) !== null) {\r\n            headers[wsConfig.wsHeaders.userId] = window.localStorage.getItem(consts.globalVariables.userId),\r\n                headers[wsConfig.wsHeaders.attachmenttype] = 'file'\r\n        }\r\n\r\n        //build the route url\r\n        var baseUrl = wsConfig.wsConfigs.baseUrl + wsConfig.userWSRoutes.media;\r\n        return new Promise((resolve, reject) => {\r\n            this.baseWSMgr.post(baseUrl, headers, mediaData).then((response) => {\r\n                resolve(response)\r\n            }).catch((err) => {\r\n                alert(err);\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method to login the user to application\r\n     * @param userData \r\n     */\r\n    getMedia() {\r\n        //build the route url\r\n        var baseUrl = wsConfig.wsConfigs.baseUrl + wsConfig.userWSRoutes.media;\r\n\r\n        //build header object\r\n        var headers = {}\r\n        if (window.localStorage.getItem(consts.response.userId) !== \"undefined\" || window.localStorage.getItem(consts.response.userId) !== null) {\r\n            // headers[wsConfig.wsHeaders.userId] = window.localStorage.getItem(consts.response.userId)\r\n            headers[wsConfig.wsHeaders.userId] = window.localStorage.getItem(consts.globalVariables.userId)\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.baseWSMgr.get(baseUrl, headers).then((response) => {\r\n               // alert(JSON.stringify(response));\r\n                resolve(response)\r\n            }).catch((err) => {\r\n                alert(err);\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * Method to get  the device media to application\r\n     * @param mediaData \r\n     */\r\n    getDeviceMedia(mediaData) {\r\n        //build the route url\r\n        var baseUrl = wsConfig.wsConfigs.baseUrl + wsConfig.userWSRoutes.deviceMedia;\r\n\r\n        //build header object\r\n        var headers = {}\r\n        if (window.localStorage.getItem(consts.response.userId) !== \"undefined\" || window.localStorage.getItem(consts.response.userId) !== null) {\r\n            headers[wsConfig.wsHeaders.mediaId] = window.localStorage.getItem(consts.response.mediaId)\r\n            headers[wsConfig.wsHeaders.userId] = window.localStorage.getItem(consts.globalVariables.userId)\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.baseWSMgr.post(baseUrl, headers, mediaData).then((response) => {\r\n                alert(\"DeviceWSMgr\" + JSON.stringify(response));\r\n                resolve(response)\r\n            }).catch((err) => {\r\n                alert(err);\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method to get  the device media to application\r\n     * @param mediaData \r\n     */\r\n    deleteMedia() {\r\n        let mediaId = window.localStorage.getItem(consts.response.mediaId);\r\n        alert(JSON.stringify(mediaId))\r\n        //build the route url\r\n        var baseUrl = wsConfig.wsConfigs.baseUrl + wsConfig.userWSRoutes.mediaDelete+mediaId;\r\n        alert(JSON.stringify(baseUrl))\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.baseWSMgr.delete(baseUrl, \"\", \"\").then((response) => {\r\n                alert(\"DeviceWSMgr\" + JSON.stringify(response));\r\n                resolve(response)\r\n            }).catch((err) => {\r\n                alert(err);\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCWebServiceMgrs/mediaWSMgr.ts","import { Injectable } from \"@angular/core\";\r\nimport { IDLBaseDbMgr } from \"./idlSCBaseDbMgr\";\r\nimport { Media } from \"../idlSCModels/Media\";\r\nimport * as database from '../idlSCHelpers/idlSCDbConfig';\r\nimport * as consts from '../idlSCHelpers/idlSCConstants';\r\n\r\n@Injectable()\r\nexport class IDLSCUploadMediaDbMgr {\r\n\r\n    baseDbMgr: IDLBaseDbMgr;\r\n\r\n    constructor(private idlBaseDbMgr: IDLBaseDbMgr) {\r\n        this.baseDbMgr = new IDLBaseDbMgr();\r\n    }\r\n\r\n    /**\r\n     * add Media to database\r\n     * @param media model object to store database\r\n     */\r\n    addMedia(media: Media) {\r\n        return new Promise((resolve, reject) => {\r\n            this.deleteMediaById(media.id).then((status) => {\r\n                this.baseDbMgr.executeSqlCallback(database.idlSCMediaQuery.insertMedia, [media.id, media.mediaName, media.mediaUrl, media.uploadTime, media.userId]).then((res) => {\r\n                    resolve(true);\r\n                }).catch((err) => {\r\n                    reject(err);\r\n                });\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Delete media by id from database\r\n     */\r\n    deleteMediaById(id) {\r\n        return new Promise((resolve, reject) => {\r\n            this.baseDbMgr.executeSqlCallback(database.idlSCMediaQuery.deleteMedia, [id]).then((res) => {\r\n                resolve(true);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * get media by id\r\n     * @param id unique id to get media from database\r\n     */\r\n    getMediaById(id) {\r\n        return new Promise((resolve, reject) => {\r\n            this.baseDbMgr.executeSqlCallback(database.idlSCMediaQuery.getMediaById, [id]).then((res: any) => {\r\n                if ((res.rows !== undefined) && (res.rows !== null)) {\r\n                    this.getMediaObject(res.rows.item(0)).then((media) => {\r\n                        //alert(JSON.stringify(media))\r\n                        resolve(media);\r\n                    })\r\n                }else if((res !== undefined) && (res[0] !== undefined)){\r\n                    this.getMediaObject(res[0]).then((media) => {\r\n                       // alert(JSON.stringify(media))\r\n                        resolve(media);\r\n                    })\r\n                }else {\r\n                    var error = {}\r\n                    error[consts.response.message] = consts.errorMessages.unableToGetUserData\r\n                    alert(error);\r\n                    reject(error)\r\n                }\r\n            }).catch((err) => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get media object from the database response\r\n     * @param obj database result object\r\n     */\r\n    private getMediaObject(obj) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            var media = new Media();\r\n            media.id = obj.ISCM_id\r\n            media.mediaName = obj.ISCM_name\r\n            media.mediaUrl = obj.ISCM_url\r\n            media.uploadTime = obj.ISCM_uploadtime\r\n            media.userId = obj.ISCM_userid\r\n            resolve(media);\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCDbMgrs/idlSCUploadMediaDbMgr.ts","import { Injectable } from \"@angular/core\";\r\nimport {DeviceMediaWSMgr} from \"../idlSCWebServiceMgrs/deviceMediaWSMgr\";\r\n\r\n@Injectable()\r\nexport class DeviceMediaDataMgr {\r\n\r\n    /**\r\n     * Default class constructor\r\n     * @param deviceMediaWSMgr  \r\n     */\r\n    constructor(private deviceMediaWSMgr: DeviceMediaWSMgr) {\r\n       \r\n    }\r\n\r\n    /**\r\n     * Method to get media \r\n     */\r\n    uploadDeviceMedia(deviceMediaData) {\r\n        return new Promise((resolve, reject) => {\r\n            this.deviceMediaWSMgr.uploadDeviceMedia(deviceMediaData).then(response => {\r\n                resolve(response);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCDataMgrs/deviceMediaDataMgr.ts","import { Injectable } from \"@angular/core\";\r\nimport { BaseWSMgr } from \"./baseWSMgr\";\r\nimport * as wsConfig from '../idlSCHelpers/idlWSConfigs';\r\nimport * as consts from '../idlSCHelpers/idlSCConstants';\r\n\r\n@Injectable()\r\nexport class DeviceMediaWSMgr {\r\n    /**\r\n     * Default constructor \r\n     */\r\n    constructor(private baseWSMgr: BaseWSMgr) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Method to upload device data\r\n     * @param deviceMediaData \r\n     */\r\n    uploadDeviceMedia(deviceMediaData) {\r\n        //build the route url\r\n        var baseUrl = wsConfig.wsConfigs.baseUrl + wsConfig.userWSRoutes.deviceMedia;\r\n        alert(JSON.stringify(deviceMediaData));\r\n        return new Promise((resolve, reject) => {\r\n            this.baseWSMgr.post(baseUrl, \"\", deviceMediaData).then((response) => {\r\n                resolve(response)\r\n            }).catch((err) => {\r\n                alert(err);\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCWebServiceMgrs/deviceMediaWSMgr.ts","import { Injectable } from \"@angular/core\";\r\nimport { DeviceWSMgr } from '../idlSCWebServiceMgrs/deviceWSMgr';\r\n\r\n@Injectable()\r\nexport class DeviceDataMgr {\r\n\r\n    /**\r\n     * Default class constructor \r\n     */\r\n    constructor(private deviceWSMgr: DeviceWSMgr) {\r\n\r\n    }\r\n\r\n    /**\r\n    * Method to get devices \r\n    */\r\n        getDevice() {\r\n            return new Promise((resolve, reject) => {\r\n                this.deviceWSMgr.getDevice().then(response => {\r\n                    resolve(response);\r\n                }).catch((err) => {\r\n                    reject(err);\r\n                })\r\n            })\r\n        }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCDataMgrs/deviceDataMgr.ts","import { BaseWSMgr } from \"./baseWSMgr\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport * as wsConfig from '../idlSCHelpers/idlWSConfigs';\r\nimport * as consts from '../idlSCHelpers/idlSCConstants';\r\n\r\n@Injectable()\r\nexport class DeviceWSMgr {\r\n    /**\r\n     * Default constructor \r\n     */\r\n    constructor(private baseWSMgr: BaseWSMgr) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Method to get the device to application\r\n     */\r\n    getDevice() {\r\n\r\n        //build the route url\r\n        var baseUrl = wsConfig.wsConfigs.baseUrl + wsConfig.userWSRoutes.device;\r\n\r\n        //build header object\r\n        var headers = {}\r\n        if (window.localStorage.getItem(consts.response.userId) !== \"undefined\" || window.localStorage.getItem(consts.response.userId) !== null) {\r\n            headers[wsConfig.wsHeaders.userId] = window.localStorage.getItem(consts.globalVariables.userId)\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.baseWSMgr.get(baseUrl, headers).then((response) => {\r\n                resolve(response)\r\n            }).catch((err) => {\r\n                alert(err);\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCWebServiceMgrs/deviceWSMgr.ts","/**\r\n * @author : IDL Systems India Pvt Ltd, @ copyright 2018\r\n * @version : 1.0\r\n * @Created by : Shruthi K\r\n * @creationDate : 29-March-2019\r\n * @superClass :\r\n * @interfaces : no interface\r\n * @changeHistory :\r\n * Date                    Modified by                     Description\r\n * @desc : This is user data manager\r\n */\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { User } from \"../idlSCModels/User\";\r\nimport * as consts from '../idlSCHelpers/idlSCConstants';\r\nimport { UserWSMgr } from '../idlSCWebServiceMgrs/userWSMgr';\r\nimport { IDLUserDBMgr } from \"../idlSCDbMgrs/idlSCUserDbMgr\";\r\n\r\n@Injectable()\r\nexport class IDLUserDataMgr {\r\n\r\n    /**\r\n     * Default class constructor\r\n     * \r\n     * @param userWebServiceMgr \r\n     * @param idlUserDbMgr \r\n     */\r\n    constructor(private userWSMgr: UserWSMgr, private idlUserDBMgr: IDLUserDBMgr) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Method to login to the application\r\n     * @param data data contains the user credentials to login the application\r\n     */\r\n    loginUser(data) {\r\n        return new Promise((resolve, reject) => {\r\n            this.userWSMgr.userLogin(data).then(response => {\r\n                if (response) {\r\n                    this.getUserObjectFromResponse(response).then((userData: User) => {\r\n                        this.idlUserDBMgr.addUser(userData).then((status) => {\r\n                            if (status) {\r\n                                //store token and user id as global variables\r\n                                //window.localStorage.setItem(consts.token.user, consts.token.bearer + response[consts.response.token])\r\n                                window.localStorage.setItem(consts.globalVariables.userId, userData.id)\r\n                                resolve(userData)\r\n                            }\r\n                        }).catch((error) => {\r\n                            reject(error);\r\n                        })\r\n                    }).catch((error) => {\r\n                        reject(error);\r\n                    })\r\n                } else {\r\n                    var error = {}\r\n                    error[consts.response.message] = consts.errorMessages.idlUserLogin\r\n                    reject(error);\r\n                }\r\n            }).catch(error => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the user data from the response\r\n     * @param response \r\n     */\r\n    private getUserObjectFromResponse(response) {\r\n        return new Promise((resolve, reject) => {\r\n            if (response) {\r\n                var user = new User();\r\n                user.id = response.content.ISCU_id\r\n                user.userName = response.content.ISCU_name\r\n                user.password = response.content.ISCU_password\r\n                user.email = response.content.ISCU_email\r\n                resolve(user);\r\n            } else {\r\n                var error = {}\r\n                error[consts.response.message] = consts.errorMessages.unableToParseResponse\r\n                reject(error);\r\n            }\r\n        })\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCDataMgrs/userDataMgr.ts","export class User {\r\n    \r\n//Define private variables\r\n    private _id: string;\r\n    private _userName: string;\r\n    private _email: string;\r\n    private _password: string;\r\n    \r\n//Getter and setter for data variables\r\nget id(): string {\r\n    return this._id;\r\n}\r\n\r\nset id(id: string) {\r\n    this._id = id;\r\n}\r\n\r\nget userName(): string {\r\n    return this._userName;\r\n}\r\n\r\nset userName(userName: string) {\r\n    this._userName = userName;\r\n}\r\n\r\nget email(): string {\r\n    return this._email;\r\n}\r\n\r\nset email(email: string) {\r\n    this._email = email;\r\n}\r\n\r\nget password(): string {\r\n    return this._password;\r\n}\r\n\r\nset password(password: string) {\r\n    this._password = password;\r\n}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCModels/User.ts","/**\r\n * @author : IDL Systems India Pvt Ltd, @ copyright 2018\r\n * @version : 1.0\r\n * @Created by : Shruthi K\r\n * @creationDate : 29-March-2019\r\n * @superClass :\r\n * @interfaces : no interface\r\n * @changeHistory :\r\n * Date                    Modified by                     Description\r\n * @desc : This is user web service manager\r\n */\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport * as wsConfig from '../idlSCHelpers/idlWSConfigs';\r\nimport * as consts from '../idlSCHelpers/idlSCConstants';\r\nimport { BaseWSMgr } from '../idlSCWebServiceMgrs/baseWSMgr';\r\n\r\n@Injectable()\r\nexport class UserWSMgr {\r\n    /**\r\n     * Default constructor \r\n     */\r\n    constructor(private baseWSMgr: BaseWSMgr) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Method to login the user to application\r\n     * @param userData \r\n     */\r\n    userLogin(userData) {\r\n\r\n        //build the route url\r\n        var baseUrl = wsConfig.wsConfigs.baseUrl + wsConfig.userWSRoutes.login;\r\n       return new Promise((resolve, reject) => {\r\n           this.baseWSMgr.post(baseUrl, \"\", userData).then((response) => {\r\n               resolve(response)\r\n           }).catch((err) => {\r\n               console.log(err);\r\n               reject(err);\r\n           })\r\n       })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCWebServiceMgrs/userWSMgr.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { LoginPage } from '../login/login';\nimport * as consts from '../../idlSCHelpers/idlSCConstants';\nimport { User } from '../../idlSCModels/User';\nimport { IDLUserDBMgr } from '../../idlSCDbMgrs/idlSCUserDbMgr';\n\n/**\n * Generated class for the HeaderPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-header',\n  templateUrl: 'header.html',\n})\nexport class HeaderPage {\n\n  id;\n  userName;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private userDbMgr: IDLUserDBMgr) {\n  }\n\n  ngOnInit() {\n  /*  this.id = window.localStorage.getItem(consts.globalVariables.userId);\n    this.userDbMgr.getUserById(this.id).then((user: User) => {\n      alert(JSON.stringify(user));\n      if (user) {\n        this.userName = user.userName;\n      }\n    }).catch((err) => {\n\n    })*/\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad HeaderPage');\n  }\n\n  logOutRedirect(){\n    this.navCtrl.push(LoginPage);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/header/header.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { MediaPage } from '../media/media';\nimport * as consts from '../../idlSCHelpers/idlSCConstants';\nimport { DashboardPage } from '../dashboard/dashboard';\nimport { MediaDataMgr } from '../../idlSCDataMgrs/mediaDataMgr';\nimport { Media } from '../../idlSCModels/Media';\nimport { IDLAlert } from '../../idlSCUtils/idlAlert';\nimport { AddmediaPage } from '../addmedia/addmedia';\n\n/**\n * Generated class for the SidebarPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-sidebar',\n  templateUrl: 'sidebar.html',\n})\nexport class SidebarPage {\n\n  mediaList: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,private idlAlert: IDLAlert, public loadingctrl: LoadingController, private mediaDataMgr: MediaDataMgr) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SidebarPage');\n  }\n\n  mediadetails() {\n   let loading = this.loadingctrl.create({\n      content: consts.loadingMessages.media\n\n    });\n    loading.present();\n    this.mediaDataMgr.getMedia().then((media) => {\n      loading.dismiss();\n     this.mediaList = media;\n     //console.log(JSON.stringify(this.mediaList));\n     var mediaData = this.mediaList.content;\n      this.navCtrl.push(MediaPage, {media: mediaData})\n      console.log(mediaData);\n     \n    }).catch((err) => {\n      loading.dismiss();\n      this.idlAlert.defaultAlert(consts.alertTitles.Login, err.message, consts.alertButtons.ok);\n    })\n  }\n\n  devicelist() {\n    this.navCtrl.push(DashboardPage);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/sidebar/sidebar.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { LoginPage } from '../pages/login/login';\nimport { HeaderPage } from '../pages/header/header';\nimport { SidebarPage } from '../pages/sidebar/sidebar';\nimport { DashboardPage } from '../pages/dashboard/dashboard';\nimport { MediaPage } from '../pages/media/media';\nimport { AddmediaPage } from '../pages/addmedia/addmedia';\nimport { DevicedetailsPage } from '../pages/devicedetails/devicedetails';\nimport { Network } from '@ionic-native/network/ngx';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IDLUserDataMgr } from '../idlSCDataMgrs/userDataMgr';\nimport { UserWSMgr } from '../idlSCWebServiceMgrs/userWSMgr';\nimport { BaseWSMgr } from '../idlSCWebServiceMgrs/baseWSMgr';\nimport { ConnectivityService } from '../idlSCHelpers/idlSCConnectivityService';\nimport { IDLAlert } from '../idlSCUtils/idlAlert';\nimport { IDLBaseDbMgr } from '../idlSCDbMgrs/idlSCBaseDbMgr';\n\nimport { MediaDataMgr } from '../idlSCDataMgrs/mediaDataMgr';\nimport { MediaWSMgr } from '../idlSCWebServiceMgrs/mediaWSMgr';\nimport { Media } from '../idlSCModels/Media';\nimport { MediaCapture } from '@ionic-native/media-capture/ngx';\nimport { IDLUserDBMgr } from '../idlSCDbMgrs/idlSCUserDbMgr';\nimport { DeviceDataMgr } from '../idlSCDataMgrs/deviceDataMgr';\nimport { DeviceWSMgr } from '../idlSCWebServiceMgrs/deviceWSMgr';\nimport { IDLSCUploadMediaDbMgr } from '../idlSCDbMgrs/idlSCUploadMediaDbMgr';\nimport { DeviceMediaDataMgr } from '../idlSCDataMgrs/deviceMediaDataMgr';\nimport { DeviceMediaWSMgr } from '../idlSCWebServiceMgrs/deviceMediaWSMgr';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    LoginPage,\n    HeaderPage,\n    SidebarPage,\n    DashboardPage,\n    MediaPage,\n    AddmediaPage,\n    DevicedetailsPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    LoginPage,\n    HeaderPage,\n    SidebarPage,\n    DashboardPage,\n    MediaPage,\n    AddmediaPage,\n    DevicedetailsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    IDLUserDataMgr,\n    UserWSMgr,\n    BaseWSMgr,\n    ConnectivityService,\n    Globalization,\n    IDLAlert,\n    Network,\n    IDLBaseDbMgr,\n    IDLUserDBMgr,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    MediaCapture,\n    MediaDataMgr,\n    MediaWSMgr,\n    DeviceDataMgr,\n    DeviceWSMgr,\n    IDLSCUploadMediaDbMgr,\n    DeviceMediaDataMgr,\n    DeviceMediaWSMgr,\n    Media\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* @author : IDL Systems India Pvt Ltd, @ copyright 2018\r\n * @version :\r\n * @Created by : Shruthi K \r\n * @creationDate : 30/03/2019\r\n * @changeHistory :\r\n * @desc :\r\n * date                Modified By                      Description\r\n * \r\n*/\r\nimport { AlertController } from \"ionic-angular\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class IDLAlert {\r\n\r\n    constructor(private alertCtrl: AlertController) {\r\n\r\n    }\r\n\r\n    /**\r\n     * method to show the default alert dialog \r\n     * @param title  defines the title of alert dialog\r\n     * @param subTitle defines the subTitle of alert dialog\r\n     * @param btnName defines the btnName of alert dialog\r\n     */\r\n    defaultAlert(title, subTitle, btnName) {\r\n        let alert = this.alertCtrl.create({\r\n            title: title,\r\n            subTitle: subTitle,\r\n            buttons: [btnName]\r\n        });\r\n        alert.present();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCUtils/idlAlert.ts","import { MediaWSMgr } from \"../idlSCWebServiceMgrs/mediaWSMgr\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport * as consts from '../idlSCHelpers/idlSCConstants';\r\nimport { Media } from \"../idlSCModels/Media\";\r\nimport { IDLSCUploadMediaDbMgr } from \"../idlSCDbMgrs/idlSCUploadMediaDbMgr\";\r\n\r\n@Injectable()\r\nexport class MediaDataMgr {\r\n\r\n    /**\r\n     * Default class constructor\r\n     * @param userWebServiceMgr \r\n     * @param idlUserDbMgr \r\n     */\r\n    constructor(private mediaWSMgr: MediaWSMgr, private idlSCMediaDbMgr: IDLSCUploadMediaDbMgr) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Method to add media \r\n     * @param metaData contains the data of the media\r\n     */\r\n    addMedia(mediaData) {\r\n        return new Promise((resolve, reject) => {\r\n            this.mediaWSMgr.addMedia(mediaData).then(response => {\r\n                //store media id as global variables\r\n                window.localStorage.setItem(consts.globalVariables.mediaId, mediaData.id)\r\n                // window.localStorage.setItem(consts.globalVariables.mediaName, media.mediaName)\r\n                resolve(response)\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method to get media \r\n     */\r\n    getMedia() {\r\n        return new Promise((resolve, reject) => {\r\n            this.mediaWSMgr.getMedia().then(response => {\r\n                resolve(response);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * delete the media data from the response\r\n     */\r\n    deleteMedia() {\r\n        return new Promise((resolve, reject) => {\r\n            this.mediaWSMgr.deleteMedia().then(response => {\r\n                resolve(response);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get the user data from the response\r\n     * @param response \r\n     */\r\n    private getMediaObjectFromResponse(response) {\r\n        return new Promise((resolve, reject) => {\r\n            if (response) {\r\n                var media = new Media();\r\n                media.id = response.content.ISCM_id\r\n                media.mediaName = response.content.ISCM_name\r\n                media.mediaUrl = response.content.ISCM_url\r\n                media.uploadTime = response.content.ISCM_uploadtime\r\n                resolve(media);\r\n            } else {\r\n                var error = {}\r\n                error[consts.response.message] = consts.errorMessages.unableToParseResponse\r\n                reject(error);\r\n            }\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCDataMgrs/mediaDataMgr.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n\n\nimport { LoginPage } from '../pages/login/login';\n\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = LoginPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\r\nimport { Network } from '@ionic-native/network/ngx';\r\n\r\n@Injectable()\r\nexport class ConnectivityService {\r\n\r\n    private internetStatus: boolean = true;\r\n\r\n\tconstructor(\r\n\t\tprivate network: Network\r\n\t) {\r\n\t\tif (this.network.type === 'none') {\r\n\t\t\tthis.internetStatus = false;\r\n\t\t}\r\n\r\n\t\tthis.network.onDisconnect().subscribe(() => {\r\n\t\t\tthis.internetStatus = false;\r\n\t\t});\r\n\r\n\t\tthis.network.onConnect().subscribe(() => {\r\n\t\t\tthis.internetStatus = true;\r\n\t\t});\r\n\t}\r\n\r\n\tisOnline(): boolean {\r\n\t\treturn this.internetStatus;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCHelpers/idlSCConnectivityService.ts","/**\r\n * @author : IDL Systems India Pvt Ltd, @ copyright 2018\r\n * @version : 1.0\r\n * @Created by : Shruthi K\r\n * @creationDate : 29-March-2019\r\n * @superClass :\r\n * @interfaces : no interface\r\n * @changeHistory :\r\n * Date                    Modified by                     Description\r\n * @desc : This is user web service manager\r\n */\r\n\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport * as wsConfig from '../idlSCHelpers/idlWSConfigs';\r\nimport * as consts from '../idlSCHelpers/idlSCConstants';\r\nimport { Globalization } from '@ionic-native/globalization/ngx';\r\nimport { map } from \"rxjs/operators\";\r\nimport {Observable} from 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class BaseWSMgr {\r\n\r\n    constructor(private http: HttpClient, private globalization: Globalization) {\r\n\r\n    }\r\n\r\n    /**\r\n     * method to get data from the server\r\n     * @param route url to get the data from the web server\r\n     * @param headers headers for the web service call\r\n     */\r\n    get(route, headers) {\r\n        return new Promise((resolve, reject) => {\r\n                this.getHeaders(headers).then((httpHeaders: HttpHeaders) => {\r\n                    this.http.get(route, { headers: httpHeaders })\r\n                        .pipe(map(data => {\r\n                            return data;\r\n                        }))\r\n                        .subscribe(res => {\r\n                            console.log(JSON.stringify(res));\r\n                            this.validate(res).then((data) => {\r\n                                resolve(res);\r\n                            }).catch((err) => {\r\n                                reject(err);\r\n                            })\r\n                        }, (err) => {\r\n                            console.log(JSON.stringify(err));\r\n                            reject(err.error);\r\n                        });\r\n                }).catch((err) => {\r\n                    reject(err);\r\n                })            \r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method for http post web service\r\n     * @param route url for the web service call\r\n     * @param headers headers for the web service\r\n     * @param body request body\r\n     */\r\n    post(route, headers, body) {\r\n        console.log(\"inside post\");\r\n        return new Promise((resolve, reject) => {\r\n                this.getHeaders(headers).then((httpHeaders: HttpHeaders) => {\r\n                    console.log(JSON.stringify(headers));\r\n                    this.http.post(route, body, { headers: httpHeaders })\r\n                        .pipe(map(data => {\r\n                            return data;\r\n                        })).subscribe(res => {\r\n                            console.log(JSON.stringify(res));\r\n                            this.validate(res).then((data) => {\r\n                                resolve(res);\r\n                            }).catch((err) => {\r\n                                reject(err);\r\n                            })\r\n                        }, (err) => {\r\n                            console.log(JSON.stringify(err));\r\n                            reject(err.error);\r\n                        });\r\n                }).catch((err) => {\r\n                    console.log(JSON.stringify(err));\r\n                    reject(err);\r\n                })\r\n        \r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method for http put web service\r\n     * @param route url for the web service call\r\n     * @param headers headers for the web service\r\n     * @param body request body\r\n     */\r\n    put(route, headers, body) {\r\n        return new Promise((resolve, reject) => {\r\n                this.getHeaders(headers).then((httpHeaders: HttpHeaders) => {\r\n                    this.http.put(route, body, { headers: httpHeaders })\r\n                        .pipe(map(data => {\r\n                            return data;\r\n                        }))\r\n                        .subscribe(res => {\r\n                            this.validate(res).then((data) => {\r\n                                resolve(res);\r\n                            }).catch((err) => {\r\n                                reject(err);\r\n                            })\r\n                        }, (err) => {\r\n                            reject(err.error);\r\n                        });\r\n                }).catch((err) => {\r\n                    reject(err);\r\n                })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method for http delete web service\r\n     * @param route url for the web service call\r\n     * @param headers headers for the web service\r\n     */\r\n    delete(route, headers, body) {\r\n        return new Promise((resolve, reject) => {\r\n                this.getHeaders(headers).then((httpHeaders: HttpHeaders) => {\r\n                    this.http.delete(route, { headers: httpHeaders })\r\n                        .pipe(map(data => {\r\n                            return data;\r\n                        }))\r\n                        .subscribe(res => {\r\n                            this.validate(res).then((data) => {\r\n                                resolve(res);\r\n                            }).catch((err) => {\r\n                                reject(err);\r\n                            })\r\n                        }, (err) => {\r\n                            reject(err.error);\r\n                        });\r\n                }).catch((err) => {\r\n                    reject(err);\r\n                })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method for http multipart data web service\r\n     * @param route url for the web service call\r\n     * @param headers headers for the web service\r\n     * @param formdata request form data\r\n     */\r\n    multipart(route, headers, formdata) {\r\n        return new Promise((resolve, reject) => {\r\n            \r\n        })\r\n    }\r\n\r\n    /**\r\n     * method to validate the response from the web service and return the response back\r\n     * @param response response from the web server\r\n     */\r\n    private validate(response) {\r\n        return new Promise((resolve, reject) => {\r\n            if (response) {\r\n                if (response[consts.response.code] !== null || response[consts.response.code] !== 'undefined') {\r\n                    var statusCode = response[consts.response.code];\r\n                    if (statusCode == '200' || statusCode == '201' || statusCode == '203' || statusCode == '204') {\r\n                        resolve(response);\r\n                    } else {\r\n                        reject(response);\r\n                    }\r\n                } else {\r\n                    /*var error = {}\r\n                    error[consts.response.message] = consts.errorMessages.idlInvalidResponse\r\n                    reject(error);*/\r\n                }\r\n            } else {\r\n                var error = {}\r\n                error[consts.response.message] = consts.errorMessages.idlResponseNotFound\r\n                reject(error);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * to get the http headers function\r\n     * @param headers header object from the derived ws class \r\n     */\r\n    private getHeaders(customHeaders) {\r\n        return new Promise((resolve, reject) => {\r\n            this.getIpAddress().then((data: string) => {\r\n                customHeaders.ip = data;\r\n                this.getGlobalization().then((locale: string) => {\r\n                    customHeaders.locale = locale\r\n                    var headers = new HttpHeaders(customHeaders);\r\n                    resolve(headers);\r\n                }).catch((err) => {\r\n                    var headers = new HttpHeaders(customHeaders);\r\n                    resolve(headers);\r\n                });\r\n            }).catch((err) => {\r\n                var headers = new HttpHeaders(customHeaders);\r\n                resolve(headers);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n    * This method is used to get the public ip address\r\n    */\r\n    private getIpAddress() {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(wsConfig.wsConfigs.ipUrl)\r\n                .pipe(map(data => {\r\n                    resolve(JSON.stringify(data));\r\n                })).catch(err => {\r\n                    return Observable.throw({\r\n                        'error': err.error\r\n                    });\r\n                }).subscribe(res => {\r\n                    resolve(JSON.stringify(res));\r\n                }, (error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Locale getLocaleName\r\n     */\r\n    private getGlobalization() {\r\n        return new Promise((resolve, reject) => {\r\n            var locale = {}\r\n            this.globalization.getLocaleName()\r\n                .then(res => {\r\n                    locale[wsConfig.wsGlobalizations.name] = res;\r\n                    this.globalization.getPreferredLanguage().then(res => {\r\n                        locale[wsConfig.wsGlobalizations.preferedLanguage] = res;\r\n                        resolve(locale)\r\n                    })\r\n                        .catch(e => {\r\n                            resolve(locale)\r\n                        })\r\n                })\r\n                .catch(e => reject(e));\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCWebServiceMgrs/baseWSMgr.ts","/**\r\n * @author : IDL Systems India Pvt Ltd, @ copyright 2018\r\n * @version : 1.0\r\n * @Created by : Shruthi K\r\n * @creationDate : 29-March-2019\r\n * @superClass :\r\n * @interfaces : no interface\r\n * @changeHistory :\r\n * Date                    Modified by                     Description\r\n * @desc : This class is used to store ws configs\r\n */\r\n\r\n\r\n\r\n/**\r\n* Configurations for webservices\r\n*/\r\nexport const wsConfigs = {\r\n    ipUrl: 'http://www.ip-api.com/json',\r\n    //baseUrl: 'http://192.168.0.139:3006/api/',\r\n    //baseUrl: 'http://192.168.0.162:3006/api/'\r\n    baseUrl: 'http://3.17.65.64/isc/api/'\r\n}\r\n/**\r\n* Common entities from globalization\r\n*/\r\nexport const wsGlobalizations = {\r\n    name: 'name',\r\n    preferedLanguage: 'preferedLanguage',\r\n}\r\n\r\n/**\r\n* routes for the user\r\n*/\r\nexport const userWSRoutes = {\r\n    login: 'isc/v1/login',\r\n    media: 'isc/v1/media',\r\n    mediaDelete: 'isc/v1/media/',\r\n    device: 'isc/v1/devices',\r\n    deviceMedia: 'isc/v1/deviceMedia'\r\n}\r\n\r\n/**-------------------\r\n* Common headers key names\r\n*/\r\nexport const wsHeaders = {\r\n    ip: 'ip',\r\n    locale: 'locale',\r\n\r\n    userId: 'userId',\r\n    mediaId: 'mediaId',\r\n    attachmenttype: 'attachmenttype'\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/idlSCHelpers/idlWSConfigs.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { DevicedetailsPage } from '../devicedetails/devicedetails';\nimport * as consts from '../../idlSCHelpers/idlSCConstants';\nimport { DeviceDataMgr } from '../../idlSCDataMgrs/deviceDataMgr';\nimport { IDLAlert } from '../../idlSCUtils/idlAlert';\n\n/**\n * Generated class for the DashboardPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-dashboard',\n  templateUrl: 'dashboard.html',\n})\nexport class DashboardPage {\n\n  user;\n  userName;\n  deviceList;\n\n  constructor(public navCtrl: NavController, private idlAlert: IDLAlert, public navParams: NavParams, private deviceDataMgr: DeviceDataMgr, public loadingctrl: LoadingController) {\n  }\n\n  ionViewDidLoad() {\n    this.user = this.navParams.get(\"user\");\n    console.log(JSON.stringify(this.user));\n    this.getDeviceList();\n  }\n\n  devicedetails() {\n    for(var i=0; i<=this.deviceList.length; i++){\n      var deviceId = this.deviceList[i].ISCD_id; \n      window.localStorage.setItem(consts.globalVariables.deviceId, deviceId);\n      this.navCtrl.push(DevicedetailsPage, {\n        deviceId: deviceId\n    })\n    }\n  }\n\n  getDeviceList() {\n    let loading = this.loadingctrl.create({\n      content: consts.loadingMessages.pleaseWait\n    });\n    loading.present();\n    this.deviceDataMgr.getDevice().then((device) => {\n      loading.dismiss();\n      this.deviceList = device;\n      var deviceData = this.deviceList.content;\n      this.deviceList = deviceData;\n      console.log(JSON.stringify(this.deviceList));\n    }).catch((err) => {\n      loading.dismiss();\n      this.idlAlert.defaultAlert(consts.alertTitles.dashBoard, err.message, consts.alertButtons.ok);\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/dashboard.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { DashboardPage } from '../dashboard/dashboard';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as idlSCValidationMessage from '../../idlSCHelpers/idlSCValidationMessage';\nimport * as consts from '../../idlSCHelpers/idlSCConstants';\nimport { IDLAlert } from '../../idlSCUtils/idlAlert';\nimport { User } from '../../idlSCModels/User';\nimport { IDLUserDataMgr } from '../../idlSCDataMgrs/userDataMgr';\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  LoginForm: FormGroup;\n  validation_messages: any;\n  showPass = false;\n  type = consts.passwordType.password;\n  clearOnEdit: any;\n\n  constructor(public idlUserDataMgr: IDLUserDataMgr, public navCtrl: NavController, public loadingctrl: LoadingController, public navParams: NavParams, public formBuilder: FormBuilder, private idlAlert: IDLAlert) {\n    \n\n    this.validation_messages = idlSCValidationMessage.validationMessages;\n\n    this.LoginForm = formBuilder.group({\n      email: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$')])],\n    });\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n  loginRedirect() {\n   if (!this.LoginForm.valid) {\n      this.idlAlert.defaultAlert(consts.alertTitles.Login, consts.alertMessages.detailEntry, consts.alertButtons.ok);\n    }\n    else {\n      let loading = this.loadingctrl.create({\n        content: consts.loadingMessages.login\n      });\n      loading.present();\n      this.idlUserDataMgr.loginUser(this.LoginForm.value).then((user: User) => {\n        loading.dismiss();\n        this.navCtrl.push(DashboardPage, {\n          user: user\n        });\n      }).catch((err) => {\n        loading.dismiss();\n        this.idlAlert.defaultAlert(consts.alertTitles.Login, err.message, consts.alertButtons.ok);\n      })\n    }\n    this.navCtrl.push(DashboardPage);\n  }\n\n  /**\n   * this function is used show or hide password\n   */\n  showPassword() {\n    if (!this.showPass) {\n      this.showPass = true;\n      this.type = consts.passwordType.text;\n    } else {\n      this.showPass = false;\n      this.clearOnEdit = true;\n      this.type = consts.passwordType.password;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}